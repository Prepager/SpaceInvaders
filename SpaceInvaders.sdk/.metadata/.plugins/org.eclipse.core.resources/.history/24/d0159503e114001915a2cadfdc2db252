// Header File
#include "game.h"

//////////////////////
// Global Variables //
//////////////////////

// Video Driver Struct.
XAxiVdma vdma;

// Display Controller Struct.
DisplayCtrl controller;

// Buffer Arrays.
u8 buffer[DISPLAY_NUM_FRAMES][MAX_FRAME];
u8 *pFrames[DISPLAY_NUM_FRAMES];

/**
 * Initialize the game logic and display.
 */
int main()
{
	//
	initialize();

	//
	while (1) {
		renderScene();
	}

	//
	return 0;
}


void initialize()
{
	int Status;
	XAxiVdma_Config *vdmaConfig;
	int i;

	/*
	 * Initialize an array of pointers to the 3 frame buffers
	 */
	for (i = 0; i < DISPLAY_NUM_FRAMES; i++)
	{
		bufferPointer[i] = frameBuf[i];
	}

	/*
	 * Initialize VDMA driver
	 */
	vdmaConfig = XAxiVdma_LookupConfig(VGA_VDMA_ID);
	if (!vdmaConfig)
	{
		xil_printf("No video DMA found for ID %d\r\n", VGA_VDMA_ID);
		return;
	}
	Status = XAxiVdma_CfgInitialize(&vdma, vdmaConfig, vdmaConfig->BaseAddress);
	if (Status != XST_SUCCESS)
	{
		xil_printf("VDMA Configuration Initialization failed %d\r\n", Status);
		return;
	}

	/*
	 * Initialize the Display controller and start it
	 */
	Status = DisplayInitialize(&dispCtrl, &vdma, DISP_VTC_ID, DYNCLK_BASEADDR, pFrames, STRIDE);
	if (Status != XST_SUCCESS)
	{
		xil_printf("Display Ctrl initialization failed during demo initialization%d\r\n", Status);
		return;
	}
	Status = DisplayStart(&dispCtrl);
	if (Status != XST_SUCCESS)
	{
		xil_printf("Couldn't start display during demo initialization%d\r\n", Status);
		return;
	}

	return;
}

void renderScene()
{
	//
	u8 *frame = dispCtrl.framePtr[dispCtrl.curFrame];

	//
	for(int xcoi = 0; xcoi < (DISPLAY_WIDTH*3); xcoi += 3)
	{
		//
		int addr = xcoi;

		//
		for(int ycoi = 0; ycoi < DISPLAY_HEIGHT; ycoi++)
		{
			//
			frame[addr + 0] = 0;	// Green
			frame[addr + 1] = 255;	// Blue
			frame[addr + 2] = 0;	// Red

			//
			addr += STRIDE;
		}
	}

	//
	Xil_DCacheFlushRange((unsigned int) frame, MAX_FRAME);
}
