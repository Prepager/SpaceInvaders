// Header
#include "Player.h"

// Initialize the player.
void initializePlayer(Player *player, Bullet *bullet) {
	// Set starting position.
	player->position = (DISPLAY_WIDTH / 2) - (PLAYER_SIZE / 2);
}

// Paint the player.
void paintPlayer(Player *player, u8 *frame) {
	// Generate the frame address for the starting position.
	int addr = (player->position * 3) + (PLAYER_Y_OFFSET * STRIDE);

	// Loop through the height and set data.
	for (int ycoi = 0; ycoi < PLAYER_SIZE; ycoi++) {
		// Copy enemy image data into frame.
		memcpy(&frame[addr], &Ship[ycoi * PLAYER_SIZE * 3], PLAYER_SIZE * 3);

		// Jump to next line.
		addr += STRIDE;
	}
}

// Depaint the player.
void depaintPlayer(Player *player, u8 *frame) {
	// Generate the frame address for the starting position.
	int addr = (player->position * 3) + (PLAYER_Y_OFFSET * STRIDE);

	// Loop through the height and set data.
	for (int ycoi = 0; ycoi < PLAYER_SIZE; ycoi++) {
		// Draw the background color.
		memset(&frame[addr], BACKGROUND, PLAYER_SIZE * 3);

		// Jump to next line.
		addr += STRIDE;
	}
}

// Position the enemies.
void positionPlayer(Player *player, u8 input) {
	// Set default next position.
	u32 nextPosition = player->position;

	// Determine the direction.
	if (input == PLAYER_KEY_LEFT) {
		nextPosition += PLAYER_MOVEMENT;
	} else if (input == PLAYER_KEY_RIGHT) {
		nextPosition -= PLAYER_MOVEMENT;
	}

	// Update position if not outside bounds.
	if (nextPosition > 0 && nextPosition < (DISPLAY_WIDTH - PLAYER_SIZE)) {
		player->position = nextPosition;
	}
}
